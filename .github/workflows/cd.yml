name: CD Pipeline

on:
  push:
    branches: [ prod ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Create k8s Directory
      run: mkdir -p k8s

    - name: Create Kubernetes Config Files
      run: |
        cat > k8s/deployment.yaml <<EOF
        apiVersion: apps/v1
        kind: Deployment
        metadata:
          name: weather-api
        spec:
          replicas: 2
          selector:
            matchLabels:
              app: weather-api
          template:
            metadata:
              labels:
                app: weather-api
            spec:
              containers:
              - name: weather-api
                image: ${{ secrets.DOCKERHUB_USERNAME }}/weather-api:latest
                ports:
                - containerPort: 5000
                env:
                - name: FLASK_ENV
                  value: "production"
        EOF
        
        cat > k8s/service.yaml <<EOF
        apiVersion: v1
        kind: Service
        metadata:
          name: weather-api
        spec:
          type: NodePort
          ports:
          - port: 80
            targetPort: 5000
            nodePort: 30000
          selector:
            app: weather-api
        EOF
        
        cat > k8s/pvc.yaml <<EOF
        apiVersion: v1
        kind: PersistentVolumeClaim
        metadata:
          name: weather-api-pvc
        spec:
          accessModes:
            - ReadWriteOnce
          resources:
            requests:
              storage: 1Gi
        EOF

    - name: Start minikube
      uses: medyagh/setup-minikube@master

    - name: Deploy to minikube
      run: |
        minikube status
        kubectl apply -f k8s/pvc.yaml
        kubectl apply -f k8s/deployment.yaml
        kubectl apply -f k8s/service.yaml
        kubectl rollout status deployment/weather-api

    - name: Get Service URL
      run: |
        minikube service weather-api --url